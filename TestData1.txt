SELECT DISTINCT pq.* -- Replace pq.* with actual columns needed for ProductQueue
FROM ARNG_IP ip
INNER JOIN CSTs p ON ip.PTY_ID = p.PTY_ID
INNER JOIN ARNGs a ON ip.ARNG_ID = a.ARNG_ID
WHERE 
    ip.DEL_FL IS NOT NULL AND ip.DEL_FL = 0
    AND a.DEL_FL IS NOT NULL AND a.DEL_FL = 0
    AND p.DEL_FL IS NOT NULL AND p.DEL_FL = 0
    AND (a.ARNG_STAT_ID = CAST(@ArngstatusPendingClosure AS INT) 
         OR a.ARNG_STAT_ID = CAST(@ArngstatusChargeOff AS INT))
    AND (a.ACC_CLS_DT IS NULL AND a.ACC_CLS_TEAM_PRCS_CLS_DT IS NULL)
    AND a.ARNG_TYP_CD IN (SELECT value FROM @productCode)
    AND ip.PRMY_ARNG_IP_FL = 1
    AND ip.CAS_DOM_ID = @domainId 
    AND ip.PRMY_CAS_FL = 1
    AND a.CLS_RSN_TX IN (SELECT value FROM @clsqry)
    AND NOT EXISTS (
        SELECT 1 
        FROM ProductQueueAction pq 
        WHERE pq.ArngId = a.ARNG_ID
        AND pq.Action NOT IN (
            CAST(@AccountClosureInProgress AS INT),
            CAST(@AssistanceRequired AS INT),
            CAST(@LetterMailRequested AS INT),
            CAST(@AccountRestrictionRequested AS INT)
        )
        AND pq.IsDeleted = 0
    );
***************************************************************************************************








SELECT
    execs.execution_id,
    execs.package_name,
    execs.start_time,
    execs.end_time,
    execs.status,
    CASE execs.status
        WHEN 1 THEN 'Created'
        WHEN 2 THEN 'Running'
        WHEN 3 THEN 'Canceled'
        WHEN 4 THEN 'Failed'
        WHEN 5 THEN 'Pending'
        WHEN 6 THEN 'Ended Unexpectedly'
        WHEN 7 THEN 'Succeeded'
        WHEN 8 THEN 'Stopping'
        WHEN 9 THEN 'Completed'
    END AS status_description,
    execs.project_name
FROM
    catalog.executions AS execs
ORDER BY
    execs.start_time DESC;



SELECT 
    event, computer, operator, source, sourceid, executionid, message, starttime, endtime
FROM 
    dbo.sysssislog
WHERE 
    event = 'OnError';


USE SSISDB;
SELECT 
    execs.execution_id,
    execs.package_name,
    msg.message_time,
    msg.message,
    msg.message_type,
    msg.message_source_name
FROM 
    catalog.executions AS execs
JOIN 
    catalog.event_messages AS msg ON execs.execution_id = msg.operation_id
WHERE 
    msg.message_type = 120 -- 120 represents Error messages
ORDER BY 
    msg.message_time DESC;

