
SET @Command = 
    'XCOPY "' + @SourceFolder + '" "' + @DestinationFolder + '" /D /Y';



SET @cmd = 
    'forfiles /P "c:\backup" /D +0 /C "cmd /c copy @path c:\shared"';





-- Step 1: Create a temporary table to store file names
CREATE TABLE #FileList (
    FileName NVARCHAR(255)
);

-- Step 2: Use xp_cmdshell to list files modified today
DECLARE @cmd NVARCHAR(MAX);
DECLARE @FolderPath NVARCHAR(255) = 'C:\backup'; -- Change this to your folder path

-- Command to list files modified today using forfiles
SET @cmd = 'forfiles /P "' + @FolderPath + '" /D +0 /C "cmd /c echo @file"';

-- Insert the output of the command into the temporary table
INSERT INTO #FileList (FileName)
EXEC xp_cmdshell @cmd;

-- Step 3: Clean up null and irrelevant rows from the temporary table
DELETE FROM #FileList WHERE FileName IS NULL OR FileName LIKE '%.';

-- Step 4: View the filenames in the temporary table
SELECT * FROM #FileList;

-- Optional: Drop the temporary table after use
-- DROP TABLE #FileList;








*****************************************************************************************************************


-- Step 1: Create a staging table for raw data
CREATE TABLE StagingTable (
    RawLine NVARCHAR(MAX) -- Holds each line as raw text
);

-- Step 2: Bulk insert raw data into the staging table
BULK INSERT StagingTable
FROM 'C:\Path\To\Your\File.txt'
WITH (
    FIELDTERMINATOR = '\n', -- Rows are separated by newline
    ROWTERMINATOR = '\n',
    TABLOCK -- Speeds up bulk insert by locking the table
);

-- Step 3: Create the target table with 23 columns
CREATE TABLE TargetTable (
    Col1 NVARCHAR(255) NOT NULL,
    Col2 NVARCHAR(255) NOT NULL,
    Col3 NVARCHAR(255) NOT NULL,
    -- Add placeholders for the remaining columns
    Col4 NVARCHAR(255) NULL,
    -- Continue up to Col23
    Col23 NVARCHAR(255) NULL
);

-- Step 4: Extract first three values from the raw data and insert into the target table
WITH ParsedData AS (
    SELECT
        -- Extract first delimiter-separated value
        LEFT(RawLine, CHARINDEX('|', RawLine + '|') - 1) AS Col1,
        -- Extract second value
        SUBSTRING(RawLine, CHARINDEX('|', RawLine + '|') + 1,
                  CHARINDEX('|', RawLine + '|', CHARINDEX('|', RawLine + '|') + 1)
                  - CHARINDEX('|', RawLine + '|') - 1) AS Col2,
        -- Extract third value
        SUBSTRING(RawLine, CHARINDEX('|', RawLine + '|', CHARINDEX('|', RawLine + '|') + 1) + 1,
                  CHARINDEX('|', RawLine + '|', CHARINDEX('|', RawLine + '|', CHARINDEX('|', RawLine + '|') + 1) + 1)
                  - CHARINDEX('|', RawLine + '|', CHARINDEX('|', RawLine + '|') + 1) - 1) AS Col3
    FROM StagingTable
)
INSERT INTO TargetTable (Col1, Col2, Col3)
SELECT Col1, Col2, Col3
FROM ParsedData;

-- Step 5: Drop the staging table to free resources
DROP TABLE StagingTable;


***********************************************************************************************
-- Insert the first three values into TargetTable
INSERT INTO TargetTable (Col1, Col2, Col3)
SELECT 
    -- Extract the first value before the first "|"
    LEFT(RawData, CHARINDEX('|', RawData + '|') - 1) AS Col1,

    -- Extract the second value between the first and second "|"
    CASE 
        WHEN CHARINDEX('|', RawData + '|') > 0 THEN 
            SUBSTRING(RawData, CHARINDEX('|', RawData + '|') + 1,
                      CHARINDEX('|', RawData + '|', CHARINDEX('|', RawData + '|') + 1) - CHARINDEX('|', RawData + '|') - 1)
        ELSE NULL
    END AS Col2,

    -- Extract the third value between the second and third "|"
    CASE 
        WHEN CHARINDEX('|', RawData + '|', CHARINDEX('|', RawData + '|') + 1) > 0 THEN
            SUBSTRING(RawData, CHARINDEX('|', RawData + '|', CHARINDEX('|', RawData + '|') + 1) + 1,
                      CHARINDEX('|', RawData + '|', CHARINDEX('|', RawData + '|', CHARINDEX('|', RawData + '|') + 1) + 1) 
                      - CHARINDEX('|', RawData + '|', CHARINDEX('|', RawData + '|') + 1) - 1)
        ELSE NULL
    END AS Col3
FROM SourceTable;





























